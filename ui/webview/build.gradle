plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.cacheFixPlugin)
    id 'kotlin-kapt'
}

android {
    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.composecompiler.get()
    }
    namespace 'org.kafka.webview'
}

dependencies {
    api project('::ui:theme')
    api project(':ui:common')
    api project(':ui:components')
    api libs.accompanist.flowlayout
    api libs.accompanist.navigation.material
    api libs.accompanist.placeholder
    api libs.accompanist.swiperefresh
    api libs.accompanist.systemuicontroller
    api libs.accompanist.web
    api libs.androidx.core.ktx
    api libs.androidx.hilt.compose
    api libs.androidx.hilt.navigation
    api libs.androidx.lifecycle.livedata.ktx
    api libs.androidx.lifecycle.process
    api libs.androidx.lifecycle.runtime
    api libs.androidx.lifecycle.viewmodel.compose
    api libs.androidx.lifecycle.viewmodel.ktx
    //    debugApi libs.compose.ui.test.manifest
    api libs.androidx.paging.compose
    api libs.coil.compose
    api libs.compose.animation.animation
    api libs.compose.foundation.foundation
    api libs.compose.foundation.layout
    //    api libs.compose.livedata
    api libs.compose.material.material3
    api libs.compose.runtime.runtime
    api libs.compose.ui.tooling
    api libs.compose.ui.ui
    api libs.compose.ui.util
    api libs.icons.feather
    api libs.icons.font.awesome
    api libs.icons.tabler
    api libs.lottie.compose
    api libs.lottie.core
    api libs.tracing

    androidTestApi libs.compose.ui.test

    implementation project(':base:domain')
    implementation project(':data:repo')
    implementation libs.coil.coil
    implementation libs.kotlin.stdlib
}
